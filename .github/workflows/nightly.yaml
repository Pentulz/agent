name: Rust Nightly Release

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  build_nightly:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux-x86
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - build: arm64
            target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install ARM toolchain
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build binaries
        run: cargo build --release --target ${{ matrix.target }}

        # Only create/update nightly release once
      - name: Create/update nightly release
        if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly
          name: Nightly Build
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binary to nightly release
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/agent${{ matrix.target == 'x86_64-pc-windows-gnu' && '.exe' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

