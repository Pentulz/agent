name: Rust Nightly Release

# Trigger once a day at 02:00 UTC
on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch: # allows manual triggering
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux-x64
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            binary_name: agent-linux-x64
          - build: windows-x64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            binary_name: agent-windows-x64.exe
          - build: linux-arm64
            target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            binary_name: agent-linux-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install ARM toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Set ARM64 environment
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Build binaries
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir -p release
          copy target\${{ matrix.target }}\release\agent.exe release\${{ matrix.binary_name }}

      - name: Prepare binary (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p release/
          cp target/${{ matrix.target }}/release/agent release/${{ matrix.binary_name }}
          chmod +x release/${{ matrix.binary_name }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: release/${{ matrix.binary_name }}

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_files/

      - name: Generate nightly tag
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          echo "RELEASE_TAG=nightly-$TIMESTAMP" >> $GITHUB_ENV

      - name: Publish Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "Nightly Release ${{ env.RELEASE_TAG }}"
          draft: false
          prerelease: true
          files: release_files/*/*
          body: |
            Automated nightly release built from commit ${{ github.sha }}
            
            ## Changes
            This release includes the latest changes from the main branch.
            
            ## Binaries
            - `agent-linux-x64`: Linux x86_64 binary
            - `agent-linux-arm64`: Linux ARM64 binary  
            - `agent-windows-x64.exe`: Windows x86_64 binary
        env:
          GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }}
