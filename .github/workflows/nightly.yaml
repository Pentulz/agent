name: Rust Nightly Release

# Trigger once a day at 02:00 UTC
# on:
#   schedule:
#     - cron: "0 2 * * *"
#   workflow_dispatch: # allows manual triggering
on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux-x86
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - build: windows
            target: x86_64-pc-windows-msvc
            os: windows-latest
          - build: arm64
            target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install ARM toolchain
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build binaries
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: agent-${{ matrix.target }}${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
          path: target/${{ matrix.target }}/release/agent${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'  # Only publish on scheduled runs or manual trigger

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_files/

      - name: List downloaded files (debug)
        run: find release_files/ -type f -ls

      - name: Prepare release files
        run: |
          mkdir -p final_release/
          # Move and rename files for release
          find release_files/ -name "agent*" -type f | while read file; do
            filename=$(basename "$file")
            dirname=$(basename "$(dirname "$file")")
            # Create descriptive names for the release files
            case $dirname in
              *linux-x86*)
                cp "$file" "final_release/agent-linux-x64${filename##*agent}"
                ;;
              *windows*)
                cp "$file" "final_release/agent-windows-x64.exe"
                ;;
              *arm64*)
                cp "$file" "final_release/agent-linux-arm64${filename##*agent}"
                ;;
            esac
          done

      - name: Generate nightly tag
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          echo "RELEASE_TAG=nightly-$TIMESTAMP" >> $GITHUB_ENV

      - name: Publish Nightly Release
        uses: softprops/action-gh-release@v2  # Updated to v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "Nightly Release ${{ env.RELEASE_TAG }}"
          draft: false
          prerelease: true
          files: final_release/*
          body: |
            Automated nightly release built from commit ${{ github.sha }}
            
            ## Changes
            This release includes the latest changes from the main branch.
            
            ## Binaries
            - `agent-linux-x64`: Linux x86_64 binary
            - `agent-linux-arm64`: Linux ARM64 binary  
            - `agent-windows-x64.exe`: Windows x86_64 binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
