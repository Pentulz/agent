name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  code_quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features
      # Check code formatting
      - name: Check formatting
        run: cargo fmt --all --check

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BUILD_TARGET: [release]
    outputs:
      release_built: ${{ steps.set-output.outputs.release_built }}
    steps:
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/checkout@v4
      - name: Build binaries in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo build --profile ${{ matrix.BUILD_TARGET }}

      - name: Run tests in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo test --profile ${{ matrix.BUILD_TARGET }}

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: agent
          path: target/${{ matrix.BUILD_TARGET }}/agent

